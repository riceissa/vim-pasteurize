*pasteurize.txt* Common User Access cut, copy, and paste

INTRODUCTION                                    *pasteurize*

This plugin provides Common User Access (CUA) mappings for cut, copy, and
paste.  It is in the spirit of |mswin.vim| but clobbers fewer keybindings.

Vim's default *quoteplus* register for accessing the system clipboard is
somewhat tedious, and there have been various approaches to make access easier:

  * CUA keybindings with, e.g. |mswin.vim|
  * |clipboard-unnamedplus| to make |quoteplus| the default register for yank,
    delete, change, and put commands
  * |<Leader>| mappings
  * |i_CTRL-R| followed by +
  * Solutions that insert system clipboard contents one character at a time,
    such as using Ctrl-Shift-v (perhaps with 'paste' enabled)
  * System Copy: https://github.com/christoomey/vim-system-copy

This plugin is in this reference class, and makes use of the prefix "g" as a
way to make access easier.

Vim's |quoteplus| register, which stores the contents of the system clipboard,
is somewhat tedious to access by default. As a result there have been various
approaches to make access easier:

  * CUA keybindings with, e.g. |mswin.vim|
  * |clipboard-unnamedplus| to make |quoteplus| the default register for yank,
    delete, change, and put commands
  * Various |<Leader>| mappings
  * |i_CTRL-R| followed by + (only works in insert mode, and doesn't solve
    copying)
  * Solutions that insert system clipboard contents one character at a time,
    such as using Ctrl-Shift-v (perhaps with 'paste' enabled)
  * System Copy: https://github.com/christoomey/vim-system-copy

This plugin is in this reference class, and makes use of the prefixes "c" and
"g" as a way to make access easier. The prefix "c" is used in normal mode and
the prefix "g" is used in visual mode (since "c" has prior meaning); you can
probably guess all or most of the mappings. In visual mode, only yanking
mappings are provided, because "gp" and "gP" have prior meaning. If you would
like to override the default meanings for "gp" and "gP", the following is one
way to do so: >

  vnoremap <expr> gp v:register !=# '"' ? '"' . v:register . 'gp' : '"+p'
  vnoremap ""gp gp
  vnoremap <expr> gP v:register !=# '"' ? '"' . v:register . 'gP' : '"+P'
  vnoremap ""gP gP
<

This will access quoteplus when no register is prefixed, but will revert to
the default meaning when a register is given, such as when typing `"xgp`.


This plugin protects against certain attempts at "clipboard hijacking" in the
terminal by never interpreting special terminal escapes. Clipboard hijacking
is an attack where a webpage fools the user into copying something they didn't
intend to copy. In the terminal, this can be especially dangerous since
pasting can result in arbitrary commands being run.

A demo of terminal clipboard hijacking can be found here:
https://thejh.net/misc/website-terminal-copy-paste

See also: http://vim.wikia.com/wiki/Pasting_registers?useskin=monobook

In addition, this plugin always uses characterwise paste when pasting from the
system clipboard. This is to avoid accidentally misplacing the pasted text.
For instance, consider the following: >

    "^"

where ^ indicates the cursor position. Suppose the user is in insert mode, and
the intent is to paste the text between the quotes. If the text was pasted
using linewise paste, one would obtain >

    pasted test^
    ""

instead of the intended >

    "pasted text^"

LICENSE                                         *safe-paste-license*

Same terms as Vim itself (see |license|).







MAPPINGS                                        *pasteurize-mappings*

                                                *pasteurize-CTRL-C*
CTRL-C                  Copy (yank) the visual selection into the clipboard
                        (|quoteplus|).

                                                *pasteurize-CTRL-X*
CTRL-X                  Cut the visual selection into the clipboard
                        (|quoteplus|).

                                                *pasteurize-CTRL-V*
CTRL-V                  Paste the contents of the clipboard (|quoteplus|).
                        There are mappings for normal mode, insert mode,
                        visual mode, and command-line mode.  The contents of
                        the clipboard are never interpreted when pasting.

SETTINGS                                     *pasteurize-settings*

By default, this plugin strips leading and trailing newlines when copying or
pasting.  This can be disabled with:
>
        let g:pasteurize_no_strip_newlines = 1
<

By default, mappings for CTRL-C, CTRL-X, and CTRL-V are enabled.  To prevent
this (so that mappings can be defined manually), do:
>
        let g:pasteurize_no_mappings = 1
<

 vim:tw=78:et:ts=8:ft=help:norl:
